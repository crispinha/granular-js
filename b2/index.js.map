{"mappings":";;;;;;;;;;;;ACAA;ACAA,MAAM,4BAAM;IACV,aAAc;QACZ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;IAED,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE;QACnB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAC5B,MAAM,GAAG;YAAE,MAAM;SAAE,CAAC;QAGtB,MAAM,CAAC,OAAO,CAAC,CAAA,KAAK,GAAI;YACtB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAG7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC,CAAC;KACJ;IAED,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE;QACpB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAC5B,MAAM,GAAG;YAAE,MAAM;SAAE,CAAC;QAGtB,MAAM,CAAC,OAAO,CAAC,CAAA,KAAK,GAAI;YACtB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,OAAO;YAGT,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,EAChD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAA,CAAC,GAAI,CAAC,KAAK,QAAQ,CAAC,CAAC;SAE7E,CAAC,CAAC;KACJ;IAED,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE;QACnB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,OAAO;QAGT,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,QAAQ,EAAE;YAC/C,QAAQ,CAAC,OAAO,CAAC,CAAC;SACnB,CAAC,CAAC;KACJ;CACF;IAED,wCAAsB,GAAP,4BAAM;;;AC9CN;IACb,YAAY,MAAM,GAAG,EAAE,CAAE;QACvB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;IAED,IAAI,GAAG;QACL,MAAM,EAAE,GAAG,CAAC,EAAG,IAAI,CAAC,MAAM,CAAE,CAAC,EAAG,IAAI,CAAC,EAAE,EAAE,CAAE,CAAC,AAAC;KAC9C;CACF;;;AFDD,MAAM,yBAAG,GAAG,IAAI,CAAA,GAAA,wCAAG,CAAA,EAAE,AAAC;AAEP;IACb,YAAY,OAAO,GAAG,EAAE,CAAE;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA,GAAA,wCAAM,CAAA,EAAE,CAAC;QAE3B,MAAM,YAAY,GAAG;YACnB,QAAQ,EAAE;gBACR,MAAM,EAAE,4BAAM,CAAC,GAAG,EAAE,GAAG,CAAC;gBACxB,OAAO,EAAE,4BAAM,CAAC,GAAG,EAAE,GAAG,CAAC;aAC1B;YACD,OAAO,EAAE,4BAAM,CAAC,GAAG,EAAE,GAAG,CAAC;YACzB,MAAM,EAAE,4BAAM,CAAC,GAAG,EAAE,GAAG,CAAC;YACxB,KAAK,EAAE,CAAC;SACT,AAAC;QAEF,IAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,KAAK;YAClB,QAAQ,EAAE;gBACR,MAAM,EAAE,AAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,IAClD,YAAY,CAAC,QAAQ,CAAC,MAAM;gBAC9B,OAAO,EAAE,AAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,IACpD,YAAY,CAAC,QAAQ,CAAC,OAAO;aAChC;YACD,OAAO,EAAE,OAAO,CAAC,OAAO,IAAI,YAAY,CAAC,OAAO;YAChD,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM;YAC7C,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,YAAY,CAAC,KAAK;YAC1C,MAAM,EAAE,EAAE;SACX,CAAC;QAEF,QAAQ;QACR,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,IAAI,IAAI,YAAY,EAAE,CAAC;QAE1D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAEzB,oCAAoC;QACpC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;KAC7C;IAED,OAAO,CAAC,SAAS,EAAE;QACjB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;KAC9B;IAED,UAAU,GAAG;QACX,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;KACxB;IAED,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE;QACnB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KAClC;IAED,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE;QACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KACnC;IAED,GAAG,CAAC,KAAK,EAAE;QACT,IAAI,CAAC,KAAK,GAAG,CAAA,GAAA,mBAAK,CAAA,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KACvC;IAED,sCAGG,CACH,SAAS,CAAC,IAAI,EAAE;QACd,IAAI,CAAC,GAAG,CAAC;YAAE,WAAW,EAAE,KAAK;SAAE,CAAC,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE;YAChC,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;QAEH,IAAI,IAAI,YAAY,WAAW,EAAE;YAE/B,cAAc;YACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,IAAI,CAAC,GAAG,CAAC;gBAAE,WAAW,EAAE,IAAI;aAAE,CAAC,CAAC;YAEhC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE;gBAC5B,MAAM,EAAE,IAAI;aACb,CAAC,CAAC;YAEH,OAAO;SACR;QAED,OAAO,IAAI,OAAO,CAAC,CAAA,OAAO,GAAI;YAE5B,cAAc;YACd,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE,CAAA,MAAM,GAAI;gBAC3C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBAErB,IAAI,CAAC,GAAG,CAAC;oBAAE,WAAW,EAAE,IAAI;iBAAE,CAAC,CAAC;gBAEhC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE;4BAC5B,MAAM;iBACP,CAAC,CAAC;gBAEH,OAAO,CAAC,MAAM,CAAC,CAAC;aACjB,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IAED,QAAQ,CAAC,EAAE,EAAE;QACX,OAAO,CAAA,GAAA,0DAAI,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAA,KAAK,GAAI,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;KAC1D;IAED,2PAMG,CACH,UAAU,CAAC,OAAO,GAAG,EAAE,EAAE;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;QAI3B,iBAAiB;QACjB,MAAM,IAAI,GAAG,IAAI,AAAC;QAElB,MAAM,KAAK;YACT,YAAY,QAAQ,EAAE,MAAM,CAAE;gBAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBAErB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBAErB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;YAED,MAAM,CAAC,OAAO,GAAG,EAAE,EAAE;gBACnB,IAAI,OAAO,CAAC,QAAQ,EAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAGnC,IAAI,OAAO,CAAC,MAAM,EAChB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;aAEhC;YAED,IAAI,GAAG;gBACL,MAAM,UAAU,GAAG,IAAM;oBACvB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,AAAC;oBAE3D,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,WAAW,CAAE,GAAG,KAAK,CAAC;oBACxC,IAAI,CAAC,WAAW,EAAE,CAAC;oBAEnB,IAAI,IAAI,CAAC,WAAW,GAAG,EAAE,EACvB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBAGvB,gBAAgB;oBAChB,MAAM,OAAO,GAAG,yBAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,AAAC;oBACpD,MAAM,QAAQ,GAAG,AAAC,OAAO,GAAG,GAAG,GAAI,EAAE,AAAC;oBAEtC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;iBACjD;gBAED,UAAU,EAAE,CAAC;aACd;YAED,IAAI,GAAG;gBACL,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5B;SACF;QAED,IAAI,YACF,QAAQ,CAAA,UACR,MAAM,CAAA,MACN,EAAE,CAAA,EACH,GAAG,OAAO,AAAC;QAEZ,IAAI,CAAC,QAAQ,EACX,QAAQ,GAAG,CAAC,CAAC;QAGf,IAAI,CAAC,MAAM,EACT,MAAM,GAAG,CAAC,CAAC;QAGb,IAAI,CAAC,EAAE,EACL,EAAE,GAAG,yBAAG,CAAC,IAAI,EAAE;QAGjB,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,AAAC;QAE1C,KAAK,CAAC,IAAI,EAAE,CAAC;QAEb,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;eACf,IAAI,CAAC,KAAK,CAAC,MAAM;YACpB;uBACE,KAAK;0BACL,QAAQ;wBACR,MAAM;oBACN,EAAE;aACH;SACF,CAAC;QAEF,OAAO,EAAE,CAAC;KACX;IAED,WAAW,CAAC,EAAE,EAAE,OAAO,EAAE;QACvB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA,KAAK,GAAI;YACjC,IAAI,KAAK,CAAC,EAAE,KAAK,EAAE,EACjB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAE/B,CAAC,CAAC;KACJ;IAED,SAAS,CAAC,EAAE,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA,KAAK,GAAI;YACjC,IAAI,KAAK,CAAC,EAAE,KAAK,EAAE,EACjB,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SAEtB,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,CAAC,GAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,AAAC;QAE1D,IAAI,CAAC,GAAG,CAAC;oBACP,MAAM;SACP,CAAC,CAAC;KACJ;IAED,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE;QAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,AAAC;QAErC,SAAS;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,AAAC;QACjD,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACzE,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE5B,OAAO;QACP,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,AAAC;QACvC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAExB,sCAAsC;QACtC,MAAM,MAAM,GAAG,yBAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,AAAC;QAE5D,SAAS;QACT,MAAM,GAAG,2BAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7B,aAAa;QACb,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,AAAC;QAChD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,GAAG,AAAC;QAEhD,IAAI,OAAO,GAAG,CAAC,EACb,OAAO,GAAG,GAAG,CAAC;QAGhB,MAAM,YAAY,GAAG,AAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAK,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,AAAC,AAAC;QAEnF,WAAW;QACX,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,YAAY,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,CAAC;QACxE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,GAAG,GAAG,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,GAAG,GAAI,CAAA,MAAM,GAAG,OAAO,CAAA,AAAC,CAAC,CAAC;QAE/D,qBAAqB;QACrB,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;QAE1C,MAAM,cAAc,GAAG,AAAC,CAAA,MAAM,GAAG,OAAO,CAAA,GAAI,IAAI,AAAC;QAEjD,UAAU,CAAC,IAAM;YACf,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB,EAAE,cAAc,GAAG,GAAG,CAAC,CAAC;QAEzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE;sBAC/B,QAAQ;oBACR,MAAM;YACN,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;SACxB,CAAC,CAAC;KACJ;CACF;AAED,SAAS,yBAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;IAChD,OAAO,AAAC,CAAA,KAAK,GAAG,KAAK,CAAA,GAAK,CAAA,MAAM,GAAG,MAAM,CAAA,GAAK,CAAA,KAAK,GAAG,KAAK,CAAA,GAAI,MAAM,CAAC;CACvE;AAED,SAAS,2BAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;IAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;CAC5C;AAED,SAAS,4BAAM,CAAC,GAAG,EAAE,GAAG,EAAE;IACxB,OAAO,IAAI,CAAC,KAAK,CAAC,AAAC,IAAI,CAAC,MAAM,EAAE,GAAI,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,CAAA;CACjE;;;;;;;;;;;ADvSD;IAEA,wCAAwB,GAAT,CAAA,GAAA,wCAAQ,CAAA","sources":["node_modules/granular-js/index.js","node_modules/granular-js/src/Granular.js","node_modules/granular-js/src/Events.js","node_modules/granular-js/src/Ids.js"],"sourcesContent":["import Granular from './src/Granular';\r\n\r\nexport default Granular;","import {\r\n  find,\r\n  merge\r\n} from 'lodash';\r\n\r\nimport Events from './Events';\r\nimport Ids from './Ids';\r\n\r\nconst ids = new Ids();\r\n\r\nexport default class Granular {\r\n  constructor(options = {}) {\r\n    this.events = new Events();\r\n\r\n    const initialState = {\r\n      envelope: {\r\n        attack: random(0.1, 0.9),\r\n        release: random(0.1, 0.9)\r\n      },\r\n      density: random(0.1, 0.9),\r\n      spread: random(0.1, 0.9),\r\n      pitch: 1\r\n    };\r\n\r\n    this.state = {\r\n      isBufferSet: false,\r\n      envelope: {\r\n        attack: (options.envelope && options.envelope.attack) ||\r\n          initialState.envelope.attack,\r\n        release: (options.envelope && options.envelope.release) ||\r\n          initialState.envelope.release\r\n      },\r\n      density: options.density || initialState.density,\r\n      spread: options.spread || initialState.spread,\r\n      pitch: options.pitch || initialState.pitch,\r\n      voices: []\r\n    };\r\n\r\n    // audio\r\n    this.context = options.audioContext || new AudioContext();\r\n\r\n    this.gain = this.context.createGain();\r\n    this.gain.gain.value = 1;\r\n\r\n    // connect to destination by default\r\n    this.gain.connect(this.context.destination);\r\n  }\r\n\r\n  connect(audioNode) {\r\n    this.gain.connect(audioNode);\r\n  }\r\n\r\n  disconnect() {\r\n    this.gain.disconnect();\r\n  }\r\n\r\n  on(events, listener) {\r\n    this.events.on(events, listener);\r\n  }\r\n\r\n  off(events, listener) {\r\n    this.events.off(events, listener);\r\n  }\r\n\r\n  set(state) {\r\n    this.state = merge(this.state, state);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {*} data\r\n   */\r\n  setBuffer(data) {\r\n    this.set({ isBufferSet: false });\r\n\r\n    this.events.fire('settingBuffer', {\r\n      buffer: data\r\n    });\r\n\r\n    if (data instanceof AudioBuffer) {\r\n\r\n      // AudioBuffer\r\n      this.buffer = data;\r\n\r\n      this.set({ isBufferSet: true });\r\n\r\n      this.events.fire('bufferSet', {\r\n        buffer: data\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n\r\n      // ArrayBuffer\r\n      this.context.decodeAudioData(data, buffer => {\r\n        this.buffer = buffer;\r\n\r\n        this.set({ isBufferSet: true });\r\n\r\n        this.events.fire('bufferSet', {\r\n          buffer\r\n        });\r\n\r\n        resolve(buffer);\r\n      });\r\n    });\r\n  }\r\n\r\n  getVoice(id) {\r\n    return find(this.state.voices, voice => voice.id === id);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} options - Options.\r\n   * @param {Object} [options.id] - Optional ID.\r\n   * @param {Object} [options.volume] - Optional volume (0.0 - 1.0).\r\n   * @param {Object} [options.position] - Optional position (0.0 - 1-0).\r\n   */\r\n  startVoice(options = {}) {\r\n    if (!this.state.isBufferSet) {\r\n      return;\r\n    }\r\n\r\n    // keep reference\r\n    const self = this;\r\n\r\n    class Voice {\r\n      constructor(position, volume) {\r\n        this.position = position;\r\n        this.volume = volume;\r\n\r\n        this.grains = [];\r\n        this.grainsCount = 0;\r\n\r\n        this.timeout = null;\r\n      }\r\n\r\n      update(options = {}) {\r\n        if (options.position) {\r\n          this.position = options.position;\r\n        }\r\n\r\n        if (options.volume) {\r\n          this.volume = options.volume;\r\n        }\r\n      }\r\n\r\n      play() {\r\n        const _innerPlay = () => {\r\n          const grain = self.createGrain(this.position, this.volume);\r\n\r\n          this.grains[ this.grainsCount ] = grain;\r\n          this.grainsCount++;\r\n\r\n          if (this.grainsCount > 20) {\r\n            this.grainsCount = 0;\r\n          }\r\n\r\n          // next interval\r\n          const density = map(self.state.density, 1, 0, 0, 1);\r\n          const interval = (density * 500) + 70;\r\n\r\n          this.timeout = setTimeout(_innerPlay, interval);\r\n        }\r\n\r\n        _innerPlay();\r\n      }\r\n\r\n      stop() {\r\n        clearTimeout(this.timeout);\r\n      }\r\n    }\r\n\r\n    let {\r\n      position,\r\n      volume,\r\n      id\r\n    } = options;\r\n\r\n    if (!position) {\r\n      position = 0;\r\n    }\r\n\r\n    if (!volume) {\r\n      volume = 1;\r\n    }\r\n\r\n    if (!id) {\r\n      id = ids.next()\r\n    }\r\n\r\n    const voice = new Voice(position, volume);\r\n\r\n    voice.play();\r\n\r\n    this.state.voices = [\r\n      ...this.state.voices,\r\n      {\r\n        voice,\r\n        position,\r\n        volume,\r\n        id\r\n      }\r\n    ];\r\n\r\n    return id;\r\n  }\r\n\r\n  updateVoice(id, options) {\r\n    this.state.voices.forEach(voice => {\r\n      if (voice.id === id) {\r\n        voice.voice.update(options);\r\n      }\r\n    });\r\n  }\r\n\r\n  stopVoice(id) {\r\n    this.state.voices.forEach(voice => {\r\n      if (voice.id === id) {\r\n        voice.voice.stop();\r\n      }\r\n    });\r\n\r\n    const voices = this.state.voices.filter(v => v.id !== id);\r\n\r\n    this.set({\r\n      voices\r\n    });\r\n  }\r\n\r\n  createGrain(position, volume) {\r\n    const now = this.context.currentTime;\r\n\r\n    // source\r\n    const source = this.context.createBufferSource();\r\n    source.playbackRate.value = source.playbackRate.value * this.state.pitch;\r\n    source.buffer = this.buffer;\r\n\r\n    // gain\r\n    const gain = this.context.createGain();\r\n    source.connect(gain);\r\n    gain.connect(this.gain);\r\n\r\n    // update position and calcuate offset\r\n    const offset = map(position, 0, 1, 0, this.buffer.duration);\r\n\r\n    // volume\r\n    volume = clamp(volume, 0, 1);\r\n\r\n    // parameters\r\n    const attack = this.state.envelope.attack * 0.4;\r\n    let release = this.state.envelope.release * 1.5;\r\n\r\n    if (release < 0) {\r\n      release = 0.1;\r\n    }\r\n\r\n    const randomoffset = (Math.random() * this.state.spread) - (this.state.spread / 2);\r\n\r\n    // envelope\r\n    source.start(now, Math.max(0, offset + randomoffset), attack + release);\r\n    gain.gain.setValueAtTime(0.0, now);\r\n    gain.gain.linearRampToValueAtTime(volume, now + attack);\r\n    gain.gain.linearRampToValueAtTime(0, now + (attack + release));\r\n\r\n    // garbage collection\r\n    source.stop(now + attack + release + 0.1);\r\n\r\n    const disconnectTime = (attack + release) * 1000;\r\n\r\n    setTimeout(() => {\r\n      gain.disconnect();\r\n    }, disconnectTime + 200);\r\n\r\n    this.events.fire('grainCreated', {\r\n      position,\r\n      volume,\r\n      pitch: this.state.pitch\r\n    });\r\n  }\r\n}\r\n\r\nfunction map(value, inMin, inMax, outMin, outMax) {\r\n  return (value - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\r\n}\r\n\r\nfunction clamp(value, min, max) {\r\n  return Math.min(max, Math.max(min, value));\r\n}\r\n\r\nfunction random(min, max) {\r\n  return Math.floor((Math.random() * (max - min)) * 10) / 10 + min\r\n}","class Events {\r\n  constructor() {\r\n    this.listeners = [];\r\n  }\r\n\r\n  on(events, listener) {\r\n    if (typeof events === 'string') {\r\n      events = [ events ];\r\n    }\r\n\r\n    events.forEach(event => {\r\n      if (!this.listeners[event]) {\r\n        this.listeners[event] = [];\r\n      }\r\n\r\n      this.listeners[event].push(listener);\r\n    });\r\n  }\r\n\r\n  off(events, listener) {\r\n    if (typeof events === 'string') {\r\n      events = [ events ];\r\n    }\r\n\r\n    events.forEach(event => {\r\n      if (!this.listeners[event]) {\r\n        return;\r\n      }\r\n\r\n      if (this.listeners[event].indexOf(listener) !== -1) {\r\n        this.listeners[event] = this.listeners[event].filter(l => l !== listener);\r\n      }\r\n    });\r\n  }\r\n\r\n  fire(event, context) {\r\n    if (!this.listeners[event]) {\r\n      return;\r\n    }\r\n\r\n    this.listeners[event].forEach(function(listener) {\r\n      listener(context);\r\n    });\r\n  };\r\n}\r\n\r\nexport default Events;\r\n","export default class Ids {\r\n  constructor(prefix = '') {\r\n    this.id = 0;\r\n    this.prefix = prefix;\r\n  }\r\n\r\n  next() {\r\n    const id = `${ this.prefix }_${ this.id++ }`;\r\n  }\r\n}"],"names":[],"version":3,"file":"index.js.map"}